前言:
     在面向对象编程中, 最通常的方法是一个new操作符产生一个对象实例,new操作符就是用来构造对象实例的。
     但是在一些情况下, new操作符直接生成对象会带来一些问题。
     举例来说, 许多类型对象的创造需要一系列的步骤:你可能需要计算或取得对象的初始设置; 选择生成哪个子对象实例;
     或在生成你需要的对象之前必须先生成一些辅助功能的对象。
     在这些情况,新对象的建立就是一个 “过程”，不仅是一个操作，像一部大机器中的一个齿轮传动。

工厂模式可以分为三类:
    1.简单工厂模式(Simple Factory)
    2.工厂方法模式(Factory Method)
    3.抽象工厂模式(Abstract Factory)

GOF在《设计模式》一书中将工厂模式分为两类：工厂方法模式（Factory Method）与抽象工厂模式（Abstract Factory）。
将简单工厂模式（Simple Factory）看为工厂方法模式的一种特例，两者归为一类。

工厂方法模式:
    一个抽象产品类，可以派生出多个具体产品类。   
    一个抽象工厂类，可以派生出多个具体工厂类。   
    每个具体工厂类只能创建一个具体产品类的实例。
抽象工厂模式:
    多个抽象产品类，每个抽象产品类可以派生出多个具体产品类。   
    一个抽象工厂类，可以派生出多个具体工厂类。   
    每个具体工厂类可以创建多个具体产品类的实例。   
区别:
    工厂方法模式只有一个抽象产品类，而抽象工厂模式有多个。   
    工厂方法模式的具体工厂类只能创建一个具体产品类的实例，而抽象工厂模式可以创建多个。

开闭原则:
    对扩展开放；对修改封闭
    简单工厂中当有新的产品需要生产时，需要改工厂的代码，不能做到修改封闭。
    工厂方法中当有新的产品需要生产时，无需修改工厂代码，只需在实现一个具体的共产即可，做到了拓展开放。


参考资料:
    https://blog:csdn:net/jason0539/article/details/23020989
    https://www.jianshu.com/p/d951ac56136e

